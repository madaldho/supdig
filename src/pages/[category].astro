---
import BaseLayout from "../layouts/BaseLayout.astro";
import LinkButton from "../components/LinkButton.astro";
import { contentfulClient } from "../lib/contentful";
import type { Link } from "../lib/contentful";
import ProfileHeader from "../components/ProfileHeader.astro";

export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<Link>({
    content_type: "link",
  });

  const paths = new Set();

  entries.items.forEach((item) => {
    if (item.fields.category) {
      paths.add({ params: { category: encodeURIComponent(item.fields.category.toLowerCase()) } });
    }
    if (item.fields.slug) {
      paths.add({ params: { category: encodeURIComponent(item.fields.slug.toLowerCase()) } });
    }
  });

  return Array.from(paths);
}

const { category } = Astro.params;
const decodedCategory = decodeURIComponent(category || '').toLowerCase();

let entries;
let isCategoryView = true;

try {
  // Try fetching by category first
  entries = await contentfulClient.getEntries<Link>({
    content_type: "link",
    "fields.category[match]": decodedCategory,
  });

  // If no entries found by category, try fetching by slug
  if (!entries.items.length) {
    entries = await contentfulClient.getEntries<Link>({
      content_type: "link",
      "fields.slug[match]": decodedCategory,
    });
    isCategoryView = false;
  }

  if (!entries.items.length) {
    throw new Error(`Tidak ada data ditemukan untuk kategori atau slug: ${decodedCategory}`);
  }
} catch (error) {
  console.error("Error fetching data:", error);
  throw new Error(`Gagal memuat data untuk ${decodedCategory}`);
}

// Map data to simple format
const links = entries.items.map((item) => ({
  title: item.fields.title || "No Title",
  description: item.fields.description || "No Description",
  imageUrl: item.fields.image?.fields?.file?.url
    ? `https:${item.fields.image.fields.file.url}`
    : "/default-image.png",
  redirectUrl: item.fields.redirectUrl || "#",
}));

const pageTitle = isCategoryView ? `Kategori: ${decodedCategory}` : links[0].title;
const pageDescription = isCategoryView 
  ? `Daftar layanan untuk kategori ${decodedCategory}`
  : links[0].description;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <main class="container mx-auto px-4 py-12">
    <ProfileHeader
      avatarUrl="/favicon.png"
      title="SuperDigital"
      subtitle="Penyedia Digital Produk Terbaik"
      description="Dengan SuperDigital, Anda dapat menemukan solusi terbaik untuk bisnis dan kreativitas Anda."
    />

    <!-- Links List -->
    <div class="space-y-6">
      {links.length ? (
        links.map((link) => (
          <LinkButton
            title={link.title}
            subtitle={link.description}
            imageUrl={link.imageUrl}
            redirectUrl={link.redirectUrl}
          />
        ))
      ) : (
        <p class="text-center text-red-500 bg-red-50 rounded-lg p-4">
          Tidak ada data untuk kategori ini.
        </p>
      )}
    </div>
  </main>
</BaseLayout>